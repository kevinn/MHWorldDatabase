apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// This handles both kotlin and java. Use kapt instead of annotationProcessor
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.gatheringhallstudios.mhworlddatabase"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /*
     * Google Support Libraries
     */
    def androidx_version = "1.0.0-alpha3"
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "com.google.android.material:material:$androidx_version"
    implementation "androidx.cardview:cardview:$androidx_version"
    implementation "androidx.gridlayout:gridlayout:$androidx_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_version"
    kapt "androidx.annotation:annotation:$androidx_version"
    implementation "androidx.constraintlayout:constraintlayout:1.1.2"

    /*
     * Android Kotlin Extensions
     */
    implementation "androidx.core:core-ktx:1.0.0-alpha3"

    /*
     * Android Architecture Components
     */
    def architecture_version = "1.1.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-alpha1'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0-alpha1'
    implementation "androidx.room:room-runtime:2.0.0-alpha1"
    kapt "androidx.room:room-compiler:2.0.0-alpha1"
    testImplementation 'androidx.arch.core:core-testing:2.0.0-alpha1'
    testImplementation "androidx.room:room-testing:2.0.0-alpha1"

    /*
     * Android Navigation Component
     */
    def nav_version = "1.0.0-alpha02"
    implementation "android.arch.navigation:navigation-fragment:$nav_version"
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"

    // optional - Test helpers
    androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
    androidTestImplementation "android.arch.navigation:navigation-testing-ktx:$nav_version"

    /*
     * Material Design Values
     * TODO Remove this library and define the values we need ourselves in dimens.xml
     */
    implementation('com.github.thekhaeng:material-design-guideline:1.0.4') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    /*
     * Adapter Delegates
     * https://github.com/sockeqwe/AdapterDelegates
     */
    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.1'

    /*
     * VectorMaster
     * https://github.com/harjot-oberai/VectorMaster
     */
    implementation 'com.sdsmdg.harjot:vectormaster:1.1.3'

    /*
     * Testing
     */
    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.test:runner:1.1.0-alpha3"
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha3'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0-alpha3"

    // explicit export to resolve guava and espresso conflict
    implementation 'com.google.code.findbugs:jsr305:3.0.1'

    // allow a replacement for streams for api level < 24
    implementation 'net.sourceforge.streamsupport:android-retrostreams:1.6.1'

    // provisional basis. Keep if we use more of its features
    implementation 'com.google.guava:guava:24.1-jre'
}
